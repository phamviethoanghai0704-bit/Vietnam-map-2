<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vietnam Map - Homeland Sea and Islands</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #da291c, #ffc800);
            min-height: 100vh;
            padding: 20px;
            color: #333;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background-color: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }
        
        header {
            background: linear-gradient(to right, #da291c, #fbd749);
            color: white;
            padding: 25px;
            text-align: center;
            position: relative;
        }
        
      .vietnam-flag {
    position: absolute;
    top: 15px;
    right: 15px;
    width: 90px;   /* tỷ lệ gần đúng 3:2 */
    height: 60px;
    background: #da291c; /* nền đỏ */
    border: 1px solid #ccc;
    border-radius: 4px;
    display: flex;
    justify-content: center;
    align-items: center;
}

    .vietnam-flag::after {
    content: "";
    width: 40px;
    height: 40px;
    background: #f2c308; /* màu vàng */
    clip-path: polygon(
        50% 0%, 61% 35%, 98% 35%, 
        68% 57%, 79% 91%, 50% 70%, 
        21% 91%, 32% 57%, 2% 35%, 
        39% 35%
    ); /* hình ngôi sao 5 cánh */
}

        
        h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }
        
        .subtitle {
            font-size: 1.2rem;
            opacity: 0.9;
        }
        
        .intro {
            padding: 20px;
            background-color: #f8f9fa;
            border-bottom: 1px solid #eaeaea;
            text-align: center;
        }
        
        .intro p {
            max-width: 800px;
            margin: 0 auto;
            line-height: 1.6;
        }
        
        .map-controls {
            padding: 15px 20px;
            background-color: #e9ecef;
            display: flex;
            justify-content: center;
            gap: 15px;
            flex-wrap: wrap;
        }
        
        .map-controls button {
            padding: 10px 20px;
            background: #da291c;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        
        .map-controls button:hover {
            background: #b32117;
            transform: translateY(-2px);
        }
        
        .map-controls button.active {
            background: #ffcd00;
            color: #333;
        }
        
        .map-container {
            height: 500px;
            position: relative;
        }
        
        #map {
            height: 100%;
            width: 100%;
            z-index: 1;
        }
        
        .info-panel {
            padding: 20px;
            background-color: #f8f9fa;
            border-top: 1px solid #eaeaea;
        }
        
        .info-panel h2 {
            color: #da291c;
            margin-bottom: 15px;
            text-align: center;
        }
        
        .tabs {
            display: flex;
            margin-bottom: 20px;
            border-bottom: 2px solid #ddd;
        }
        
        .tab {
            padding: 10px 20px;
            cursor: pointer;
            font-weight: 600;
            color: #666;
            transition: all 0.3s ease;
        }
        
        .tab.active {
            color: #da291c;
            border-bottom: 3px solid #da291c;
        }
        
        .tab-content {
            display: none;
        }
        
        .tab-content.active {
            display: block;
        }
        
        .city-list, .island-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 15px;
            margin-top: 15px;
        }
        
        .city-card, .island-card {
            background: white;
            padding: 15px;
            border-radius: 8px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.08);
            transition: transform 0.3s ease;
            cursor: pointer;
            border-left: 4px solid #da291c;
        }
        
        .island-card {
            border-left-color: #3498db;
        }
        
        .city-card:hover, .island-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }
        
        .city-name, .island-name {
            font-weight: 600;
            color: #24384d;
            margin-bottom: 5px;
        }
        
        .city-population, .island-info {
            font-size: 0.9rem;
            color: #7f8c8d;
        }
        
        .vietnam-info {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-top: 20px;
            padding: 20px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.08);
        }
        
        .info-card {
            padding: 15px;
        }
        
        .info-card h3 {
            color: #da291c;
            margin-bottom: 10px;
            border-bottom: 2px solid #ffcd00;
            padding-bottom: 5px;
        }
        
        .info-card ul {
            list-style-type: none;
            padding-left: 0;
        }
        
        .info-card li {
            padding: 5px 0;
            border-bottom: 1px dashed #ffffff;
        }
        
        .loading {
            display: none;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(255, 255, 255, 0.9);
            padding: 20px 30px;
            border-radius: 8px;
            z-index: 1000;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }
        
        footer {
            text-align: center;
            padding: 20px;
            color: #7f8c8d;
            font-size: 0.9rem;
            border-top: 1px solid #eaeaea;
        }
        
        footer a {
            color: #da291c;
            text-decoration: none;
        }
        
        footer a:hover {
            text-decoration: underline;
        }
        
        @media (max-width: 768px) {
            .map-container {
                height: 400px;
            }
            
            .vietnam-flag {
                position: static;
                margin: 0 auto 15px;
            }
            
            .map-controls {
                flex-direction: column;
                align-items: center;
            }
            
            .map-controls button {
                width: 100%;
                max-width: 250px;
            }
        }
        
        /* Legend styles */
        .legend {
            position: absolute;
            bottom: 20px;
            right: 20px;
            background: white;
            padding: 10px;
            border-radius: 5px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
            z-index: 1000;
        }
        
        .legend h4 {
            margin: 0 0 10px;
            font-size: 14px;
            color: #333;
        }
        
        .legend-item {
            display: flex;
            align-items: center;
            margin-bottom: 5px;
        }
        
        .legend-color {
            width: 15px;
            height: 15px;
            border-radius: 50%;
            margin-right: 8px;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <div class="vietnam-flag"></div>
            <h1>Vietnam Map - Homeland Sea and Islands</h1>
            <p class="subtitle">Explore Vietnam with its cities and the Hoang Sa, Truong Sa archipelagos with Haipham</p>
        </header>
        
        <div class="intro">
            <p>Vietnam is a coastal country located on the eastern edge of the Indochinese Peninsula. With a coastline of over 3,260 km, Vietnam has indisputable sovereignty over the Hoang Sa and Truong Sa archipelagos in the East Sea.</p>
        </div>
        
        <div class="map-controls">
            <button id="viewMainland" class="active">View Mainland</button>
            <button id="viewHoangSa">View Hoang Sa Archipelago</button>
            <button id="viewTruongSa">View Truong Sa Archipelago</button>
            <button id="viewAll">View Entire Territory</button>
        </div>
        
        <div class="map-container">
            <div id="map"></div>
            <div class="loading" id="loadingIndicator">
                <p>Loading Vietnam map data...</p>
            </div>
            
            <div class="legend">
                <h4>Legend</h4>
                <div class="legend-item">
                    <div class="legend-color" style="background-color: #e74c3c;"></div>
                    <span>Capital City</span>
                </div>
                <div class="legend-item">
                    <div class="legend-color" style="background-color: #2ecc71;"></div>
                    <span>Municipality</span>
                </div>
                <div class="legend-item">
                    <div class="legend-color" style="background-color: #3498db;"></div>
                    <span>Other Cities</span>
                </div>
                <div class="legend-item">
                    <div class="legend-color" style="background-color: #da291c;"></div>
                    <span>Hoang Sa Archipelago</span>
                </div>
                <div class="legend-item">
                    <div class="legend-color" style="background-color: #ffcd00;"></div>
                    <span>Truong Sa Archipelago</span>
                </div>
            </div>
        </div>
        
        <div class="info-panel">
            <div class="tabs">
                <div class="tab active" data-tab="cities">Cities</div>
                <div class="tab" data-tab="islands">Archipelagos</div>
                <div class="tab" data-tab="info">Vietnam Information</div>
            </div>
            
            <div class="tab-content active" id="cities-tab">
                <h2>Major Cities of Vietnam</h2>
                <div class="city-list" id="cityList">
                    <!-- City cards will be dynamically inserted here -->
                </div>
            </div>
            
            <div class="tab-content" id="islands-tab">
                <h2>Hoang Sa and Truong Sa Archipelagos</h2>
                <div class="island-list" id="islandList">
                    <!-- Island cards will be dynamically inserted here -->
                </div>
            </div>
            
            <div class="tab-content" id="info-tab">
                <div class="vietnam-info">
                    <div class="info-card">
                        <h3>Geography</h3>
                        <ul>
                            <li><strong>Area:</strong> 331,212 km²</li>
                            <li><strong>Coastline:</strong> 3,444 km</li>
                            <li><strong>Highest point:</strong> Fansipan (3,143 m)</li>
                            <li><strong>Longest river:</strong> Mekong River</li>
                        </ul>
                    </div>
                    
                    <div class="info-card">
                        <h3>Administrative Divisions</h3>
                        <ul>
                            <li>58 provinces</li>
                            <li>5 municipalities</li>
                            <li>3 regions: North, Central, South</li>
                            <li>Capital: Hanoi</li>
                        </ul>
                    </div>
                    
                    <div class="info-card">
                        <h3>Demographics</h3>
                        <ul>
                            <li><strong>Population:</strong> ~98 million</li>
                            <li><strong>Official language:</strong> Vietnamese</li>
                            <li><strong>Largest city:</strong> Ho Chi Minh City</li>
                            <li><strong>Population density:</strong> 308/km²</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        
        <footer>
            <p>Map data © <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a> | Vietnam data collected from public sources</p>
        </footer>
    </div>

    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <script>
        // Vietnam geographical data
        const vietnamData = {
            name: "Vietnam",
            center: [16.1667, 107.8333],
            zoom: 6,
            cities: [
                { name: "Hanoi", lat: 21.0278, lng: 105.8342, population: "8.1 million", region: "Northern", type: "Capital" },
                { name: "Ho Chi Minh City", lat: 10.8231, lng: 106.6297, population: "9.0 million", region: "Southern", type: "Municipality" },
                { name: "Da Nang", lat: 16.0544, lng: 108.2022, population: "1.2 million", region: "Central", type: "Municipality" },
                { name: "Hai Phong", lat: 20.8651, lng: 106.6838, population: "2.1 million", region: "Northern", type: "Municipality" },
                { name: "Can Tho", lat: 10.0452, lng: 105.7469, population: "1.6 million", region: "Southern", type: "Municipality" },
                { name: "Hue", lat: 16.4637, lng: 107.5909, population: "455,000", region: "Central", type: "City" },
                { name: "Nha Trang", lat: 12.2388, lng: 109.1967, population: "500,000", region: "Central", type: "City" },
                { name: "Vung Tau", lat: 10.4047, lng: 107.1417, population: "450,000", region: "Southern", type: "City" },
                { name: "Da Lat", lat: 11.9404, lng: 108.4583, population: "250,000", region: "Central Highlands", type: "City" },
                { name: "Hai Duong", lat: 20.9397, lng: 106.3309, population: "500,000", region: "Northern", type: "City" }
            ],
            islands: {
                hoangSa: {
                    name: "Hoang Sa Archipelago",
                    center: [16.65, 112.75],
                    zoom: 9,
                    islands: [
                        { name: "Phu Lam Island", lat: 16.83, lng: 112.33, info: "Largest island in Hoang Sa Archipelago" },
                        { name: "Cay Island", lat: 16.97, lng: 112.28, info: "Has a meteorological station" },
                        { name: "Bac Island", lat: 17.10, lng: 111.45, info: "Located in the northern part of the archipelago" },
                        { name: "Trung Island", lat: 16.70, lng: 112.70, info: "Central location of the archipelago" },
                        { name: "Nam Island", lat: 16.40, lng: 112.90, info: "Located in the southern part of the archipelago" }
                    ]
                },
                truongSa: {
                    name: "Truong Sa Archipelago",
                    center: [10.5, 114.5],
                    zoom: 7,
                    islands: [
                        { name: "Truong Sa Lon Island", lat: 10.23, lng: 114.29, info: "Largest island, has Truong Sa town" },
                        { name: "Son Ca Island", lat: 10.22, lng: 114.28, info: "Has an observation station" },
                        { name: "Sinh Ton Island", lat: 9.88, lng: 114.35, info: "Has a seaport" },
                        { name: "Nam Yet Island", lat: 10.11, lng: 114.38, info: "Has a radar station" },
                        { name: "Song Tu Tay Island", lat: 11.25, lng: 114.33, info: "Has a lighthouse" }
                    ]
                }
            }
        };
        
        // Initialize the map
        let map = L.map('map').setView(vietnamData.center, vietnamData.zoom);
        
        // Add OpenStreetMap tiles
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '© OpenStreetMap contributors',
            maxZoom: 18
        }).addTo(map);
        
        let cityMarkers = [];
        let islandMarkers = [];
        let hoangSaLayer, truongSaLayer;
        
        // Function to create custom icon based on city type
        function createCityIcon(cityType) {
            let color = '#3498db'; // Default blue for cities
            
            if (cityType === 'Capital') color = '#e74c3c'; // Red for capital
            if (cityType === 'Municipality') color = '#2ecc71'; // Green for municipalities
            
            return L.divIcon({
                className: 'custom-city-marker',
                html: `<div style="background-color: ${color}; width: 12px; height: 12px; border-radius: 50%; border: 2px solid white; box-shadow: 0 0 5px rgba(0,0,0,0.5);"></div>`,
                iconSize: [16, 16],
                iconAnchor: [8, 8]
            });
        }
        
        // Function to create island icon
        function createIslandIcon(islandGroup) {
            let color = '#da291c'; // Red for Hoang Sa
            if (islandGroup === 'truongSa') color = '#ffcd00'; // Yellow for Truong Sa
            
            return L.divIcon({
                className: 'custom-island-marker',
                html: `<div style="background-color: ${color}; width: 10px; height: 10px; border-radius: 50%; border: 2px solid white; box-shadow: 0 0 5px rgba(0,0,0,0.5);"></div>`,
                iconSize: [14, 14],
                iconAnchor: [7, 7]
            });
        }
        
        // Function to add city markers to the map
        function addCityMarkers() {
            // Clear existing markers
            cityMarkers.forEach(marker => map.removeLayer(marker));
            cityMarkers = [];
            
            // Add markers for each city
            vietnamData.cities.forEach(city => {
                const marker = L.marker([city.lat, city.lng], { 
                    icon: createCityIcon(city.type)
                })
                .addTo(map)
                .bindPopup(`
                    <div style="min-width: 200px;">
                        <h3 style="margin: 0 0 10px; color: #da291c;">${city.name}</h3>
                        <p><strong>Population:</strong> ${city.population}</p>
                        <p><strong>Region:</strong> ${city.region}</p>
                        <p><strong>Type:</strong> ${city.type}</p>
                    </div>
                `);
                
                cityMarkers.push(marker);
            });
        }
        
        // Function to add island markers to the map
        function addIslandMarkers() {
            // Clear existing island markers
            islandMarkers.forEach(marker => map.removeLayer(marker));
            islandMarkers = [];
            
            // Add markers for Hoang Sa islands
            vietnamData.islands.hoangSa.islands.forEach(island => {
                const marker = L.marker([island.lat, island.lng], { 
                    icon: createIslandIcon('hoangSa')
                })
                .addTo(map)
                .bindPopup(`
                    <div style="min-width: 200px;">
                        <h3 style="margin: 0 0 10px; color: #da291c;">${island.name}</h3>
                        <p><strong>Part of:</strong> Hoang Sa Archipelago</p>
                        <p>${island.info}</p>
                    </div>
                `);
                
                islandMarkers.push(marker);
            });
            
            // Add markers for Truong Sa islands
            vietnamData.islands.truongSa.islands.forEach(island => {
                const marker = L.marker([island.lat, island.lng], { 
                    icon: createIslandIcon('truongSa')
                })
                .addTo(map)
                .bindPopup(`
                    <div style="min-width: 200px;">
                        <h3 style="margin: 0 0 10px; color: #da291c;">${island.name}</h3>
                        <p><strong>Part of:</strong> Truong Sa Archipelago</p>
                        <p>${island.info}</p>
                    </div>
                `);
                
                islandMarkers.push(marker);
            });
        }
        
        // Function to update the city list in the info panel
        function updateCityList() {
            const cityList = document.getElementById('cityList');
            cityList.innerHTML = '';
            
            vietnamData.cities.forEach(city => {
                const cityCard = document.createElement('div');
                cityCard.className = 'city-card';
                cityCard.innerHTML = `
                    <div class="city-name">${city.name}</div>
                    <div class="city-population">Population: ${city.population}</div>
                    <div class="city-population">Region: ${city.region}</div>
                `;
                
                // Add click event to center map on city
                cityCard.addEventListener('click', () => {
                    map.setView([city.lat, city.lng], 10);
                    // Open popup for the corresponding marker
                    cityMarkers.find(marker => 
                        marker.getLatLng().lat === city.lat && 
                        marker.getLatLng().lng === city.lng
                    ).openPopup();
                });
                
                cityList.appendChild(cityCard);
            });
        }
        
        // Function to update the island list in the info panel
        function updateIslandList() {
            const islandList = document.getElementById('islandList');
            islandList.innerHTML = '';
            
            // Add Hoang Sa islands
            vietnamData.islands.hoangSa.islands.forEach(island => {
                const islandCard = document.createElement('div');
                islandCard.className = 'island-card';
                islandCard.innerHTML = `
                    <div class="island-name">${island.name}</div>
                    <div class="island-info">Hoang Sa Archipelago</div>
                    <div class="island-info">${island.info}</div>
                `;
                
                // Add click event to center map on island
                islandCard.addEventListener('click', () => {
                    map.setView([island.lat, island.lng], 11);
                    // Open popup for the corresponding marker
                    islandMarkers.find(marker => 
                        marker.getLatLng().lat === island.lat && 
                        marker.getLatLng().lng === island.lng
                    ).openPopup();
                });
                
                islandList.appendChild(islandCard);
            });
            
            // Add Truong Sa islands
            vietnamData.islands.truongSa.islands.forEach(island => {
                const islandCard = document.createElement('div');
                islandCard.className = 'island-card';
                islandCard.innerHTML = `
                    <div class="island-name">${island.name}</div>
                    <div class="island-info">Truong Sa Archipelago</div>
                    <div class="island-info">${island.info}</div>
                `;
                
                // Add click event to center map on island
                islandCard.addEventListener('click', () => {
                    map.setView([island.lat, island.lng], 11);
                    // Open popup for the corresponding marker
                    islandMarkers.find(marker => 
                        marker.getLatLng().lat === island.lat && 
                        marker.getLatLng().lng === island.lng
                    ).openPopup();
                });
                
                islandList.appendChild(islandCard);
            });
        }
        
        // Add a simple polygon to roughly represent Vietnam's borders
        const vietnamBorder = L.polygon([
            [23.3924, 105.3379], // Northwest point
            [22.0000, 102.5000], // Western border with Laos
            [16.0000, 107.5000], // Central border with Laos
            [10.0000, 104.0000], // Southern border with Cambodia
            [8.5000, 104.5000],  // Southern tip
            [8.5000, 109.5000],  // Eastern coastline start
            [21.0000, 109.0000], // Northern coastline
            [23.3924, 105.3379]  // Back to northwest
        ], {
            color: '#da291c',
            weight: 2,
            opacity: 0.7,
            fillOpacity: 0.1
        }).addTo(map);
        
        // Add rectangles to represent Hoang Sa and Truong Sa areas
        hoangSaLayer = L.rectangle([
            [17.5, 111.0],
            [15.5, 113.5]
        ], {
            color: '#da291c',
            weight: 1,
            fillOpacity: 0.1
        }).addTo(map).bindPopup('Hoang Sa Archipelago - Vietnamese Territory');
        
        truongSaLayer = L.rectangle([
            [12.0, 111.5],
            [8.0, 117.0]
        ], {
            color: '#ffcd00',
            weight: 1,
            fillOpacity: 0.1
        }).addTo(map).bindPopup('Truong Sa Archipelago - Vietnamese Territory');
        
        // Initialize the map with city markers
        addCityMarkers();
        addIslandMarkers();
        updateCityList();
        updateIslandList();
        
        // Map view controls
        document.getElementById('viewMainland').addEventListener('click', function() {
            map.setView(vietnamData.center, vietnamData.zoom);
            setActiveButton(this);
        });
        
        document.getElementById('viewHoangSa').addEventListener('click', function() {
            map.setView(vietnamData.islands.hoangSa.center, vietnamData.islands.hoangSa.zoom);
            setActiveButton(this);
        });
        
        document.getElementById('viewTruongSa').addEventListener('click', function() {
            map.setView(vietnamData.islands.truongSa.center, vietnamData.islands.truongSa.zoom);
            setActiveButton(this);
        });
        
        document.getElementById('viewAll').addEventListener('click', function() {
            map.setView([12, 108], 5);
            setActiveButton(this);
        });
        
        // Tab functionality
        document.querySelectorAll('.tab').forEach(tab => {
            tab.addEventListener('click', function() {
                // Remove active class from all tabs
                document.querySelectorAll('.tab').forEach(t => t.classList.remove('active'));
                // Add active class to clicked tab
                this.classList.add('active');
                
                // Hide all tab content
                document.querySelectorAll('.tab-content').forEach(content => {
                    content.classList.remove('active');
                });
                
                // Show the corresponding tab content
                const tabId = this.getAttribute('data-tab');
                document.getElementById(`${tabId}-tab`).classList.add('active');
            });
        });
        
        // Function to set active button
        function setActiveButton(activeButton) {
            document.querySelectorAll('.map-controls button').forEach(btn => {
                btn.classList.remove('active');
            });
            activeButton.classList.add('active');
        }
        
        // Show loading indicator briefly (for demonstration)
        document.getElementById('loadingIndicator').style.display = 'block';
        setTimeout(() => {
            document.getElementById('loadingIndicator').style.display = 'none';
        }, 1500);
    </script>
</body>
</html>
